name: Run PHPUnit tests and coverage report
on:
  pull_request:
    types: [opened]
    branches: master
  workflow_dispatch:
jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    runs-on: self-hosted
    steps:
      - name: login to ECR
        run: aws ecr get-login-password --region us-east-1 | sudo docker login  --username AWS --password-stdin  https://249553882629.dkr.ecr.us-east-1.amazonaws.com
      - name: connect to qa server
        run: aws eks --region us-east-1 update-kubeconfig --name aprende-dev
      - uses: actions/checkout@v2
        with:
          ref: '${{ github.head_ref }}'
      - name: get current image and run unit tests
        continue-on-error: true
        run: |
          DATE=`date '+%Y%m%d%H%M%S'` 
          PLUGIN=$(echo ${{ github.repository }}| sed  's@.*/@@')
          PLUGINPATH=$(grep $PLUGIN /usr/local/moodle/.gitmodules  -B2 | grep path |awk '{print $3}')
          #IMAGE=249553882629.dkr.ecr.us-east-1.amazonaws.com/aprende-moodle-qa:moodle-qa-3.10.1-20210323193704
          #IMAGE=$(kubectl describe deployment moodle -n qa| grep Image | awk '{print $2}') 
          sudo chown -R ubuntu:ubuntu  /usr/local/moodle
          sudo chown -R ubuntu:ubuntu  /home/ubuntu/_work
          cd /usr/local/moodle
          git submodule update --init --recursive .
          git submodule foreach git checkout master
          git submodule foreach git pull origin master
          git clone git@github.com:Aprende-com/devops.git /tmp/devops-$DATE
          cp -r /usr/local/moodle /home/ubuntu/_work/$PLUGIN/$PLUGIN/
          cd /home/ubuntu/_work/$PLUGIN/$PLUGIN/
          rsync -av --progress ./* ./moodle --exclude moodle
          sudo cp /tmp/devops-$DATE/dockerfiles/Dockerfile /home/ubuntu/_work/$PLUGIN/$PLUGIN/
          sudo chmod 777 /home/ubuntu/_work/$PLUGIN/$PLUGIN/Dockerfile
          sudo cp /home/ubuntu/tools/coverage/php.ini /home/ubuntu/_work/$PLUGIN/$PLUGIN/
          sudo cp /home/ubuntu/tools/coverage/20-xdebug.ini /home/ubuntu/_work/$PLUGIN/$PLUGIN/
          sudo aws s3 cp s3://aprende-configs/configqa.php /home/ubuntu/_work/$PLUGIN/$PLUGIN/
          #sudo echo "FROM $IMAGE" > /home/ubuntu/_work/$PLUGIN/$PLUGIN/Dockerfile 
          #sudo echo "RUN rm -rf /var/www/moodle/$PLUGINPATH/*" >> /home/ubuntu/_work/$PLUGIN/$PLUGIN/Dockerfile
          #sudo echo "COPY  ./moodle /var/www/moodle" >> /home/ubuntu/_work/$PLUGIN/$PLUGIN/Dockerfile
          sudo echo "COPY  ./configqa.php /var/www/moodle/config.php" >> /home/ubuntu/_work/$PLUGIN/$PLUGIN/Dockerfile
          sudo echo "COPY  ./20-xdebug.ini /usr/local/etc/php/conf.d/20-xdebug.ini" >> /home/ubuntu/_work/$PLUGIN/$PLUGIN/Dockerfile
          sudo echo "RUN chmod 755 /var/www/moodle/$PLUGINPATH" >> /home/ubuntu/_work/$PLUGIN/$PLUGIN/Dockerfile 
          sudo echo "RUN cd /var/www/moodle && pecl install xdebug && rm -f /usr/local/etc/php/php.ini" >> /home/ubuntu/_work/$PLUGIN/$PLUGIN/Dockerfile 
          sudo echo "COPY  ./php.ini /usr/local/etc/php/php.ini" >> /home/ubuntu/_work/$PLUGIN/$PLUGIN/Dockerfile
          sudo docker run --rm -dit -p 3306:3306  -e MYSQL_ROOT_PASSWORD=P4S5w0rd123  --name mysql mysql:8.0
          sleep 22
          mysql -h 172.17.0.2 -uroot -pP4S5w0rd123 -e  "create database moodle_test;"
          mysql -h 172.17.0.2 -uroot -pP4S5w0rd123 -e  "ALTER USER 'root'@'%' IDENTIFIED WITH mysql_native_password BY 'P4S5w0rd123';"
          #git clone git@github.com:Aprende-com/devops.git /tmp/devops-$DATE  
          sudo docker build -t unit-test-$DATE .
          sudo docker run -d unit-test-$DATE
          CONTAINER=$(sudo docker ps | grep unit-test-$DATE | awk '{print $1}'| head -n 2| tail -n1)
          sudo docker exec  $CONTAINER /usr/local/bin/php  /var/www/moodle/admin/tool/phpunit/cli/init.php
          echo "container is $CONTAINER"
          echo "generating phpunit.xml"
          sudo cp /home/ubuntu/tools/coverage/phpunit_template.xml  phpunit.xml
          sudo chmod 777 phpunit.xml
          PATHS=$(grep path /usr/local/moodle/.gitmodules  -B2 | grep path |awk '{print $3}')
          for i in $PATHS;do   sed -i '/ <testsuite name="aprende_phpunit_testsuite">/a  \ \ \ \ \ \ \ \ \ \   <directory suffix="_test.php">'$i'/tests</directory>'  phpunit.xml;done
          for i in $PATHS;do   sed -i '/ <whitelist>/a  \ \ \ \ \ \ \ \ \ \    <directory suffix=".php">'$i'</directory>'  phpunit.xml;done
          pwd
          cat phpunit.xml
          sudo docker cp /home/ubuntu/tools/coverage/install_composer.sh $CONTAINER:/tmp
          sudo docker exec $CONTAINER  chmod 777 /tmp/install_composer.sh
          sudo docker exec $CONTAINER rm -f /var/www/moodle/phpunit.xml
          sudo docker cp phpunit.xml $CONTAINER:/var/www/moodle/phpunit.xml
          sudo docker exec $CONTAINER /tmp/install_composer.sh
      - name: Copy report
        if: always()
        run: |
          CONTAINER=$(sudo docker ps | grep unit-test-$DATE | awk '{print $1}'| head -n 2| tail -n1)
          cd /var/www/reports/coverage-reports/2021
          MONTH=`date '+%m'`
          sudo rm -rf $MONTH
          sudo docker cp $CONTAINER:/var/www/moodle/coverage-html-output/ /var/www/reports/coverage-reports/2021/$MONTH
      - name: clean up
        if: always()
        run: |
          sudo docker kill $(sudo docker ps -q) 
          sudo docker rm $(sudo docker ps -a -q)
